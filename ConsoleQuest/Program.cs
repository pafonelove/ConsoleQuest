// 07.07.2022. Написана базовая логика квеста, начата проектировка механики перехода между уровнями.
// 11.07.2022. Добавлен экран отображения текста об окончании демоверсии игры.

/* Задачи:
 * 1. Сделать систему запуска и выхода из игры. (+++ DONE +++)
 * 2. Сделать механику загрузки уровней.        (+++ DONE +++)
 * 3. Написать сюжет для первых двух уровней.   (+++ DONE +++)
 * 4. Создать линейный сюжет с последующим переходом на нелинейность.
 * 5. Сделать систему сохранений и загрузки игры через взаимодействие с файлом или массивом.
 * 6. Настроить корректный размер окна и отображение текста в консоли.
 * 7. Сделать систему псевдоинвентаря через взаимодействие с файлом или массивом.
 * 8. Проставить бесконечный цикл while во всех методах с локациями (!!!) (+++ DONE +++)
 * 9. Добавить выбор повторного запуска игры или закрытия программы в конце. (+++ DONE +++)
 * 10. Сделать цветной текст для обозначения предметов, локаций и т.д.
 * 11. Сделать отображение одинаковых предметов в инвентаре количественно (x2, x3, x4, ...).
 * 12. Поработать над входом в пещеру после деревни (Cave => Village => Cave) - не срабатывает метод RestartGame. (!!!) (+++ DONE +++)
 * 13. Переписать корректный текст из Actions.txt в проект. (!!!) (+++ DONE +++)
 * 14. Сделать воспроизведение MP3-файлов в консоли.
 * 15. Сделать так, чтобы игрок оставался в меню закупа, а не выходил из него автоматически.
 * 16. Сделать метод удаления купленного Игроком предмета из инвентаря продавца (купил Хлеб - он пропал из меню покупки).
 */

using System.Diagnostics;
using System.Diagnostics.CodeAnalysis;
using System.Net.Mail;
using System.Reflection;
using System.Runtime.CompilerServices;
using GameSpace;
using GameScreen;


class Program
{
    public static void Main()
    {
        // Запуск игры (бесконечного цикла).
        while (!Game.exit)
        {
            //NewGame();
            //if (exit)
            //    return;
            // ChooseLocation();    // выбор любой локации, с которой игрок хочет начать свой путь
            Game.StartGame();    // старт с первой локации
            if (Game.exit)
                Game.RestartGame();
        }
    }
}